package minefield;

import mvc.*;
import tools.*;
import java.util.*;
import java.awt.*;
import javax.swing.*;
import java.beans.PropertyChangeEvent;

public class MineFieldView extends View 
{
	public MineFieldView(MineField m)
	{
		super(m);
		model.addPropertyChangeListener(this);
		m.change(new Point(10, 10), true);
	}

	@Override
	public void propertyChange(PropertyChangeEvent arg0) 
	{
		MineField m = (MineField) model;
		int dim = m.getDim();
		JLabel[][] cells = m.getCells();
		setLayout(new GridLayout(dim, dim));
		
		Point[][] field = m.getField();
		ArrayList<Point> path = m.getPath();
		
		// Where the player currently is and the end goal
		Point location = m.getLocation();
		Point goal = field[dim - 1][dim - 1];
		
		// Draw the grid of the MineField
		for (int row = 0; row < dim; row++)
		{
			for (int col = 0; col < dim; col++)
			{
				Point current = field[row][col];
				
				if (!path.contains(current))
				{
					cells[row][col].setText("?");
					cells[row][col].setBorder(BorderFactory.createLineBorder(Color.BLACK));
				} 
				else if (path.contains(current) && !current.isMine())
				{
					// If player has visited this Point
					cells[row][col].setText("" + m.getMineNeighbors(current));
					cells[row][col].setBorder(BorderFactory.createLineBorder(Color.WHITE));
				}
				else if (path.contains(location) && location.isMine())
				{
					// If the player has stepped onto a mine
					cells[row][col].setText("!");
					cells[row][col].setBorder(BorderFactory.createLineBorder(Color.RED));
					Utilities.inform("Uh oh! You've set off a mine!"
							+ "\nPlease try again. Go to File > New to start a new game.");
				}
				
				this.add(cells[row][col]);
			}
		}
		
		cells[dim - 1][dim - 1].setBorder(BorderFactory.createLineBorder(Color.GREEN));
		// If the player has reached the goal
		if (path.contains(goal))
		{
			Utilities.inform("Congratulations! You've won!"
					+ "\nGo to File > New to start a new game.");
		}
    }
}
